# # # # # # # # # # # 
#       SETUP       # 
# # # # # # # # # # # 
version: 2.1
orbs:
  aws-cli: circleci/aws-cli@3.1.0
  serverless: circleci/serverless-framework@1.0.1
# # # # # # # # # # # 
#       JOBS        # 
# # # # # # # # # # # 
jobs:
  # # # # # # # # # # # 
  #      BACKEND      # 
  # # # # # # # # # # # 
  deploy-backend:
      executor: serverless/default
      steps:
        - checkout
        - aws-cli/setup
        - serverless/setup:
            app-name: sounds-of-middle-earth-lambda
            org-name: circleci
        - run:
            command: serverless deploy -v
            name: deploy-backend
  # # # # # # # # # # # 
  #      FRONTEND     #  
  # # # # # # # # # # # 
  build-frontend:
    docker:
      - image: circleci/node:14.17.6
    parallelism: 1
    working_directory: ~/react-application/frontend
    steps:
      - checkout:
          path: ~/react-application
      - attach_workspace:
          at: ~/react-application/frontend
      - run: npm install
      - run: npm run build
      - persist_to_workspace:
          root: .
          paths:
          - dist
  deploy-frontend:
    docker:
      - image: circleci/golang:1.17.3
    parallelism: 1
    working_directory: ~/react-application/frontend
    steps:
    - checkout:
        path: ~/react-application
    - attach_workspace:
        at: ~/react-application/frontend
    - restore_cache:
        key: v1-pkg-cache
    - run:  go get -v github.com/bep/s3deploy/v2
    - save_cache:
        key: v1-pkg-cache
        paths:
           - /go/pkg
    - run:
        name: Deploy to S3
        command: |
          s3deploy -source=dist/ -region=eu-west-1 -key=$AWS_ACCESS_KEY_ID -secret=$AWS_SECRET_ACCESS_KEY -distribution-id=$AWS_CLOUDFRONT_DISTRIBUTION_ID -bucket=$BUCKET_NAME

# # # # # # # # # # # 
#      WORKFLOWS    # 
# # # # # # # # # # # 
workflows:
  version: 2
  build-and-deploy-frontend:
    jobs:
      - deploy-backend:
          filters:
            branches:
              only:
              - master
      - build-frontend:
          filters:
            branches:
              only:
              - master
      - deploy-frontend:
          requires:
            - build-frontend
          filters:
            branches:
              only:
              - master